## Authors: 
##   Christoph Doerbeck
##
## Summary:
##
##
##

---
- hosts: myVirthost

  tasks:

  - include_vars: "{{ item }}"
    with_first_found: "{{ vars_libvirt }}"

  - include_vars: "{{ item }}"
    with_first_found: "{{ vars_hw_profiles }}"

  - debug:
      var: kvm_cfg

  - debug:
      var: kvm_profiles.bastion

  - debug:
      msg="{{ item }} {{ hostvars[item]['inventory_hostname_short'] }} {{ hostvars[item]['h_pubIP'] }} netmask={{ g_pubNM }} dns={{ g_pubDNS }} gateway={{ g_pubGW }} mac={{ hostvars[item]['h_pubMAC'] }}"
    loop: "{{ groups['myBastion'] }}"


  - name: "LIBVIRT-CREATE-BASTION: deploy kickstart configuration"
    vars:
      - p_hw:         "{{ hostvars[item]['h_hardware'] }}"
        # ** WARNING ** The following syntax makes NO SENSE to me, but it works
      - p_diskDevice: "{{ hw_profile[p_hw].disk_dev }}"
    template:
      src: "bastion-kickstart.j2"
      dest: "/var/www/html/ks.cfg"
      owner: root
      group: apache
      mode: 0644
    loop: "{{ groups['myBastion'] }}"

  - name: "LIBVIRT-CREATE-BASTION: virt-install bastion"
    shell:
      cmd: |
        virt-install --name="{{ hostvars[item]['inventory_hostname_short'] }}" \
                     --ram={{ kvm_profiles.bastion.memsize }} \
                     --disk {{ kvm_cfg.qcow_dir}}/{{ hostvars[item]['inventory_hostname_short'] }}.qcow2,bus={{ kvm_profiles.bastion.disk.bus }},sparse={{ kvm_profiles.bastion.disk.sparse }},size={{ kvm_profiles.bastion.disk.size }} \
                     --check disk_size=off \
                     --location={{ kvm_cfg.iso.dir }}/{{ kvm_cfg.iso.name }} \
                     --extra-args="ks={{ kvm_cfg.ks_url }} ip={{ hostvars[item]['h_pubIP'] }} netmask={{ g_pubNM }} dns={{ g_pubDNS }} gateway={{ g_pubGW }}" \
                     --network "network={{ kvm_cfg.network.name }},mac={{ hostvars[item]['h_pubMAC'] }},model={{ kvm_profiles.bastion.network.model }}" \
                     --graphics vnc \
                     --vcpus {{  kvm_profiles.bastion.vcpus }} \
                     --boot hd,network,menu=yes \
                     --noreboot
#                     --noautoconsole
    loop: "{{ groups['myBastion'] }}"

  - name: "LIBVIRT-CREATE-BASTION: Create ssh directory"
    file:
      path: /root/.ssh
      mode: "0700"
      state: directory

  - name: "LIBVIRT-CREATE-BASTION: test ssh key"
    stat: path="/root/.ssh/id_rsa.pub"
    register: test_ssh_key

  - name: "LIBVIRT-CREATE-BASTION: create ssh key"
    command: "ssh-keygen -t rsa -b 2048 -N '' -f /root/.ssh/id_rsa"
    when: test_ssh_key.stat.exists == false

  - name: "LIBVIRT-CREATE-BASTION: inject ssh key to bastion vm"
    shell:
      cmd: |
        virt-customize -d "{{ hostvars[item]['inventory_hostname_short'] }}" \
                       --ssh-inject root:file:/root/.ssh/id_rsa.pub \
                       --selinux-relabel
    loop: "{{ groups['myBastion'] }}"

  - name: "LIBVIRT-CREATE-BASTION: start bastion vm"
    shell:
      cmd: |
        virsh start "{{ hostvars[item]['inventory_hostname_short'] }}"
    loop: "{{ groups['myBastion'] }}"

  - name: "LIBVIRT-CREATE-BASTION: clean out local ssh keys for bastion"
    shell:
      cmd: |
        ssh-keygen -R "{{ hostvars[item]['inventory_hostname'] }}"
        ssh-keygen -R "{{ hostvars[item]['inventory_hostname_short'] }}"
        ssh-keygen -R "{{ hostvars[item]['inventory_hostname_short'] }}.{{ g_clusterName }}.{{ g_publicDomain }}"
        ssh-keygen -R "{{ hostvars[item]['h_pubIP'] }}"
    loop: "{{ groups['myBastion'] }}"

  - name: "LIBVIRT-CREATE-BASTION: give bastion a chance to boot"
    wait_for:
      host: "{{ hostvars[item]['h_pubIP'] }}"
      connect_timeout: 5
      delay: 15
      port: 22
      sleep: 1
      state: started
      timeout: 300
    loop: "{{ groups['myBastion'] }}"

  - name: "LIBVIRT-CREATE-BASTION: add ssh keys for bastion"
    shell:
      cmd: |
        ssh-keyscan bastion.ocp.example.com >> /root/.ssh/known_hosts
