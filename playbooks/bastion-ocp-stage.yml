## Authors: 
##   Christoph Doerbeck
##
## Summary:
##   Downloads and unpacks software /root for OCP installation
##

---
- hosts: myBastion
  tasks:

  - name: "BASTION-OCP: stat pull secret"
    stat: path=/root/ocp4_pull_secret
    register: test_pull_secret

  - name: "BASTION-OCP: "
    fail: msg="COPY YOUR OCP4 PULL-SECRET HERE /root/ocp4_pull_secret"
    when: test_pull_secret.stat.exists == false

  - name: "BASTION-OCP: Clean-up ocp working directory"
    shell:
      cmd: |
        if [[ -d "/root/ocp" ]] ; then rm -rf /root/ocp ; fi

  - name: "BASTION-OCP: Create openshift working directory"
    file:
      path: /root/ocp
      mode: "0755"
      state: directory

  - name: "BASTION-OCP: Create ssh directory"
    file:
      path: /root/.ssh
      mode: "0700"
      state: directory



  - name: "BASTION-OCP: test ssh key"
    stat: path="/root/.ssh/id_rsa.pub"
    register: test_ssh_key

  - name: "BASTION-OCP: create ssh key"
    command: "ssh-keygen -t rsa -b 2048 -N '' -f /root/.ssh/id_rsa"
    when: test_ssh_key.stat.exists == false



  - name: "BASTION-OCP: stat ocp client software"
    stat: path=/usr/local/src/openshift-client-linux-4.2.16.tar.gz
    register: ocp_client_sw

  - name: "BASTION-OCP: download client software"
    get_url:
      url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/4.2.16/openshift-client-linux-4.2.16.tar.gz
      dest: /usr/local/src/
      mode: "0644"
    when: ocp_client_sw.stat.exists == false

  - name: "BASTION-OCP: unpack client software"
    shell:
      cmd: |
        cd /usr/local/bin
        tar zxvf /usr/local/src/openshift-client-linux-4.2.16.tar.gz



  - name: "BASTION-OCP: stat ocp install software"
    stat: path=/usr/local/src/openshift-install-linux-4.2.16.tar.gz
    register: ocp_install_sw

  - name: "BASTION-OCP: download installer software"
    get_url:
      url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/4.2.16/openshift-install-linux-4.2.16.tar.gz 
      dest: /usr/local/src/
      mode: "0644"
    when: ocp_install_sw.stat.exists == false

  - name: "BASTION-OCP: unpack installer software"
    shell:
      cmd: |
        cd /usr/local/bin
        tar zxvf /usr/local/src/openshift-install-linux-4.2.16.tar.gz



  - name: "BASTION-OCP: deploy install-config.yml"
    vars:
      - p_pullSecret:   "{{ lookup('file','/root/ocp4_pull_secret') |quote }}"
      - p_sshKey:       "{{ lookup('file','/root/.ssh/id_rsa.pub')  |quote }}"
      - p_clusterName:  "{{ g_clusterName }}"
      - p_domain:       "{{ g_publicDomain }}"
    template:
      src: "ocp-install-config.j2"
      dest: "/root/ocp/install-config.yaml"
      owner: root
      group: root
      mode: 644



  - name: "BASTION-OCP: Clean-up ignition directory"
    shell:
      cmd: |
        if [[ -d "/var/lib/matchbox/ignition/" ]] ; then rm -f /var/lib/matchbox/ignition/* ; fi

  - name: "BASTION-OCP: create ignition files"
    shell:
      cmd: |
        cd /root/ocp
        /usr/local/bin/openshift-install --dir=/root/ocp create ignition-configs

  - name: "BASTION-OCP: copy ignition files"
    shell:
      cmd: |
        cd /root/ocp
        cp *.ign /var/lib/matchbox/ignition/

  - name: "BASTION-OCP: fix ignition file permissions"
    shell:
      cmd: |
        chown matchbox.matchbox /var/lib/matchbox/ignition/*

  - name: "BASTION-OCP: DEBUG"
    debug: msg="YOU CAN NOW DEPLOY YOUR BOOTSTRAP"
