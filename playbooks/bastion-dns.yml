## Authors: 
##   Christoph Doerbeck
##
## Summary:
##   This playbook intends to do the heavy lifting of configuring the bastion-host based on the paremeters defined in the
##   ansible inventory (config).
##
##   This will configure needed dns services using dnsmasq
##

---
- hosts: myBastion
  tasks:

  - name: "BASTION-DNS: package installation"
    yum: name=dnsmasq state=installed

  - name: "BASTION-DNS: clean cfg directory"
    shell:
      cmd: |
        if [[ -d "/etc/dnsmasq.d" ]] ; then rm -rf /etc/dnsmasq.d/* ; fi

  - name: "BASTION-DNS: cleanup conflicting IPs in /etc/hosts"
    lineinfile:
      dest:   "/etc/hosts"
      regexp: "{{ hostvars[item]['h_pubIP'] }} .*$"
      state:  absent
    loop: "{{ groups['all'] }}"

  - name: "BASTION-DNS: cleanup conflicting names in /etc/hosts"
    lineinfile:
      dest:   "/etc/hosts"
      regexp: ".*{{ item }}.{{ g_pubFQDN }}.*"
      state:  absent
    loop: "{{ groups['all'] }}"

  - name: "BASTION-DNS: deploy STANDARD options"
    vars: 
      - p_nameServer:  "{{ g_pubDNS }}"
    template:
      src: "dnsmasq-standard-opts.j2"
      dest: "/etc/dnsmasq.d/30-standard-opts.conf"
      owner: root

  - name: "BASTION-DNS: deploy HOST entries"
    vars: 
      - p_item:     "{{ item }}"
      - p_name:     "{{ hostvars[item]['inventory_hostname_short']}}"
      - p_addr:     "{{ hostvars[item]['h_pubIP'] }}"
      - p_mac:      "{{ hostvars[item]['h_pubMAC'] }}"
      - p_etcdName: "{{ hostvars[item]['h_etcdName'] | default('') }}"
      - p_revAddr:  "{{ (p_addr.split('.'))[::-1]|join('.') }}"
      - p_netmask:  "{{ g_pubNM }}"
      - p_gateway:  "{{ g_pubGW'] }}"
      - p_domain:   "{{ g_clusterName }}.{{ g_publicDomain }}"
    when: g_publicNet == "True" 
    template:
      src: "dnsmasq-host-entry.j2"
      dest: "/etc/dnsmasq.d/50-dns-{{ p_domain }}-{{ p_name }}.conf"
      owner: root
      group: root
      mode: 644
    loop: "{{ groups['all'] }}"

  - name: "BASTION-DNS: deploy ETCD entries"
    vars: 
      - p_item:      "{{ item }}"
      - p_name:      "{{ hostvars[item]['inventory_hostname_short']}}"
      - p_addr:      "{{ hostvars[item]['h_pubIP'] }}"
      - p_etcdName:  "{{ hostvars[item]['h_etcdName'] | default('') }}"
      - p_domain:    "{{ g_clusterName }}.{{ g_publicDomain }}"
      - p_clusterName: "{{ g_clusterName }}"
    when:
      - p_etcdName != ""
    template:
      src: "dnsmasq-etcd-entry.j2"
      dest: "/etc/dnsmasq.d/45-etcd-{{ p_etcdName }}.conf"
      owner: root
      group: root
      mode: 644
    loop: "{{ groups['all'] }}"

  - name: "BASTION-DNS: deploy API config"
    vars: 
      - p_addr:      "{{ hostvars[item]['h_pubIP'] }}"
      - p_domain:    "{{ g_clusterName }}.{{ g_publicDomain }}"
      - p_revAddr:   "{{ (p_addr.split('.'))[::-1]|join('.') }}"
    when:
      - g_useDNS == "True" 
    template:
      src: "dnsmasq-api-entry.j2"
      dest: "/etc/dnsmasq.d/55-api-{{ g_clusterName }}.conf"
      owner: root
    loop: "{{ groups['myBastion'] }}"

  - name: "BASTION-DNS: deploy PUBLIC wildcard"
    vars: 
      - p_addr:      "{{ hostvars[item]['h_pubIP'] }}"
      - p_domain:    "{{ g_wildcardName }}.{{ g_clusterName }}.{{ g_publicDomain }}"
    when:
      - g_useDNSwildcard == "True"
    template:
      src: "dnsmasq-wildcard-entry.j2"
      dest: "/etc/dnsmasq.d/45-wildcard-{{ g_clusterName }}.conf"
      owner: root
    loop: "{{ groups['myBastion'] }}"

  - name: "BASTION-DNS: add comment to /etc/hosts"
    blockinfile:
      dest:   "/etc/hosts"
      insertbefore: BOF
      block: |
        ##
        ## NOTE - dns entries for the OCP cluster are in /etc/dnsmasq.d/
        ## NOTE - this includes PTR, CNAME, SVR and WILDCARDS
        ## NOTE - resolv.conf should point to localhost 127.0.0.1
        ##
      state:  present

  ##
  ## We need to disable networkmanager from toying with /etc/resolv.conf
  ##

  - name: "BASTION-DNS: disable network-manager /etc/resolv.conf adjustments"
    template:
      src:   "dns-resolv-fix.j2"
      dest:  "/etc/NetworkManager/conf.d/90-dns-none.conf"
      owner: root

  - name: "BASTION-DNS: restart networkmanager service"
    service: name=NetworkManager state=reloaded enabled=yes

  - name: "BASTION-DNS: template deploy resolv.conf to point to localhost"
    vars: 
      - p_search:     "{{ g_clusterName }}.{{ g_publicDomain }}"
      - p_nameserver: "127.0.0.1"
    template:
      src:   "dns-resolv-conf.j2"
      dest:  "/etc/resolv.conf"
      owner: root

  - name: "BASTION-DNS: add firewalld service rules"
    firewalld:
      service: dns
      immediate: yes
      permanent: yes
      state: enabled

  - name: "BASTION-DNS: create systemd override directory"
    file:
      path: /etc/systemd/system/dnsmasq.service.d
      mode: "0755"
      state: directory

  - name: "BASTION-HAPROXY: set systemd overrides"
    template:
      src: "dnsmasq-systemd-overrides.j2"
      dest: "/etc/systemd/system/dnsmasq.service.d/overrides.conf"
      owner: root
      group: root
      mode: 644

  - name: "BASTION-DNS: restart service"
    service: name=dnsmasq state=restarted enabled=yes daemon_reload=yes

