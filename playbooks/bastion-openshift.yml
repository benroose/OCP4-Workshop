## Authors: 
##   Christoph Doerbeck
##
## Summary:
##   Downloads and unpacks software /root for OCP installation
##

---
- hosts: myBastion
  tasks:

  - name: "BASTION-OPENSHIFT: Create openshift working directory {{ g_credsDir }}"
    file:
      path: "{{ g_credsDir }}"
      mode: "0755"
      state: directory

  - name: "BASTION-OPENSHIFT: Clean-up ignition,json and auth files"
    shell:
      cmd: |
        if [[ -d "g_credsDir" ]] ; then 
          rm -f {{ g_credsDir }}/*.ign
          rm -f {{ g_credsDir }}/*.json
          rm -rf {{ g_credsDir }}/auth ;
        fi
    ignore_errors: yes


  ########################################
  ## PULL-SECRET
  ##
  ##   if    deploying via the ws-deployer-kvm, pull_secret may already be deployed
  ##   else  could be in the ./config directory per instructions
  ##   else  this is a manual step user must complete therefore show message and exit
  ##

  - name: "BASTION-OPENSHIFT: stat pull-secret in {{ g_credsDir }}"
    stat: path="{{ g_credsDir }}/pull-secret.txt"
    register: test_secret_credsDir

  - name: "LIBVIRT-POSTINSTALL-BASTION: stat pull-secret in ./config"
    stat: path="../config/pull-secret.txt"
    register: test_secret_confDir

  - block:

      - debug: msg="RETRIEVE PULL-SECRET https://cloud.redhat.com/openshift/install/metal/user-provisioned"

      - debug: msg="SAVE PULL-SECRET HERE ./config/pull-secret.txt"

      - fail: msg="MISSING PULL-SECRET"

    when: 
      - test_secret_credsDir.stat.exists == false
      - test_secret_confDir.stat.exists == false

  - name: "LIBVIRT-POSTINSTALL-BASTION: deploy pull secret"
    when: 
      - test_secret_credsDir.stat.exists == false
      - test_secret_confDir.stat.exists == true
    template:
      src: "../config/pull-secret.txt"
      dest: "{{ g_credsDir }}"
      owner: root
      group: root
      mode: 0644

  ########################################

  - name: "BASTION-OPENSHIFT: Create ssh directory"
    file:
      path: /root/.ssh
      mode: "0700"
      state: directory

  - name: "BASTION-OPENSHIFT: test ssh key"
    stat: path="/root/.ssh/id_rsa.pub"
    register: test_ssh_key

  - name: "BASTION-OPENSHIFT: create ssh key"
    command: "ssh-keygen -t rsa -b 2048 -N '' -f /root/.ssh/id_rsa"
    when: test_ssh_key.stat.exists == false

  - name: "BASTION-OPENSHIFT: download ocp software [SRC: {{ g_ocp_src }}]"
    environment:
      http_proxy: "{{ g_http_proxy }}"
      https_proxy: "{{ g_https_proxy }}"
    get_url:
      url: "{{ g_ocp_src }}/{{ item }}"
      dest: "/usr/local/src/{{ item }}"
      mode: "0644"
    with_items:
      - "{{ g_ocp_install }}"
      - "{{ g_ocp_client }}"

  - name: "BASTION-OPENSHIFT: unpack ocp software"
    shell:
      cmd: |
        cd /usr/local/bin
        tar zxvf /usr/local/src/{{ item }}
    with_items:
      - "{{ g_ocp_install }}"
      - "{{ g_ocp_client }}"

  - name: "BASTION-OPENSHIFT: load pull secret"
    shell: cat {{ g_credsDir }}/pull-secret.txt
    register: pull_secret

  - name: "BASTION-OPENSHIFT: load ssh key"
    shell: cat /root/.ssh/id_rsa.pub
    register: ssh_key

  - name: "BASTION-OPENSHIFT: deploy install-config.yml"
    vars:
      - p_pullSecret:   "{{ pull_secret.stdout |quote }}"
      - p_sshKey:       "{{ ssh_key.stdout |quote }}"
      - p_clusterName:  "{{ g_clusterName }}"
      - p_domain:       "{{ g_publicDomain }}"
      - p_http_proxy:   "{{ g_http_proxy | default ('') }}"
      - p_https_proxy:  "{{ g_https_proxy | default ('') }}"
      - p_no_proxy:     "{{ g_no_proxy | default ('') }}"
    template:
      src: "ocp-install-config.j2"
      dest: "{{ g_credsDir }}/install-config.yaml"
      owner: root
      group: root
      mode: 644

  - name: "BASTION-OPENSHIFT: Clean-up matchbox ignition directory"
    shell:
      cmd: |
        if [[ -d "/var/lib/matchbox/ignition/" ]] ; then rm -f /var/lib/matchbox/ignition/* ; fi

  - name: "BASTION-OPENSHIFT: create ignition files"
    shell:
      cmd: |
        cd {{ g_credsDir }}
        /usr/local/bin/openshift-install --dir={{ g_credsDir }} create ignition-configs

  - name: "BASTION-OPENSHIFT: copy ignition files"
    shell:
      cmd: |
        cp {{ g_credsDir }}/*.ign /var/lib/matchbox/ignition/

  - name: "BASTION-OPENSHIFT: fix ignition file permissions"
    shell:
      cmd: |
        chown matchbox.matchbox /var/lib/matchbox/ignition/*

  - name: "BASTION-OPENSHIFT: additional package installation"
    yum: name=bash-completion state=installed

  - name: "BASTION-OPENSHIFT: configure openshift bash completion"
    shell: 
      cmd: |
        /usr/local/bin/oc completion bash >> /etc/bash_completion.d/oc_completion
        /usr/local/bin/openshift-install completion bash >> /etc/bash_completion.d/openshift-install_completion

  - name: "BASTION-OPENSHIFT: DEBUG"
    debug: msg="YOU CAN NOW DEPLOY THE BOOTSTRAP"
